// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(cuid())
  email    String @unique
  username String @unique

  password    Password?
  games       Game[]
  sharedGames UserGame[]
  words       GameWord[]
  sessions    Session[]
}

model Password {
  hash   String
  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model Session {
  id      String   @id @default(cuid())
  data    String
  expires DateTime
  userId  String
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model Game {
  id      String   @id @default(cuid())
  key     String
  addedAt DateTime @default(now())
  userId  String
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  otherUsers UserGame[]
  words      GameWord[]

  @@unique([userId, key])
}

model UserGame {
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  gameId String
  game   Game   @relation(fields: [gameId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([userId, gameId])
}

model GameWord {
  word    String
  addedAt DateTime @default(now())
  userId  String
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  gameId  String
  game    Game     @relation(fields: [gameId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([gameId, word])
}

model Word {
  word   String @unique
  rating Int
}

model DailyGame {
  key  String @unique
  date String @unique
}
