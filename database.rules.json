{
  "rules": {
    // User profiles
    "users": {
      // Any user can read the list of users
      ".read": "auth != null",

      "$user_id": {
        // A user's profile can only be updated by that user
        ".write": "auth.uid == $user_id"
      }
    },

    // Private user data
    "user_data": {
      "$user_id": {
        // User games can only be read by that user
        ".read": "auth.uid === $user_id",

        // Users can update their own metadata
        "meta": {
          ".write": "auth.uid === $user_id"
        },

        // Users can update their own games list. Other users can add new games
        // in a user's games list; this is how sharing works.
        "games": {
          "$game_id": {
            ".write": "auth != null && (auth.uid === $user_id || (!data.exists() && newData.parent().parent().parent().parent().child('game_data').child($game_id).child('users').child(auth.uid).val() === 'creator'))"
          }
        }
      }
    },

    // General game parameters, such as the key
    "game_data": {
      "$game_id": {
        // Only the users participating in a game can read it
        ".read": "auth != null && data.child('users').child(auth.uid).exists()",

        // The creating user can create, but not update, game meta data
        "meta": {
          ".write": "auth != null && !data.exists() && newData.parent().child('users').child(auth.uid).val() === 'creator'"
        },

        // The creating user can create and update the game users
        "users": {
          ".write": "auth != null && (!data.exists() || data.child(auth.uid).val() === 'creator')"
        },

        // Participating users can update game states (score, wordsFound)
        "stats": {
          ".write": "auth != null && newData.parent().child('users').child(auth.uid).exists()"
        }
      }
    },

    // Words that have been found in a game
    "game_words": {
      "$game_id": {
        // Only the users participating in a game can read it
        ".read": "auth != null && data.parent().parent().child('game_data').child($game_id).child('users').child(auth.uid).exists()",

        "$word": {
          // Associated users can create, but not update, new words
          ".write": "auth != null && !data.exists() && newData.parent().parent().parent().child('game_data').child($game_id).child('users').child(auth.uid).exists()"
        }
      }
    }
  }
}
